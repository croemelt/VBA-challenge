Attribute VB_Name = "Module1"
Sub stock_test()

    'create loop for entire workbook
    Dim WS As Worksheet
    For Each WS In ActiveWorkbook.Worksheets
    On Error Resume Next
    WS.Activate

        lastrow = WS.Cells(Rows.Count, 1).End(xlUp).Row
    
        'set variables
        Dim stock_symbol As String
        Dim stock_volume As Double
        stock_total = 0
        Dim summary_table_row As Integer
        summary_table_row = 2
        'Values
        Dim price_begin As Double
        Dim price_end As Double
        Dim price_change

        'Cell titles
        Cells(1, 9).Value = "Ticker"
        Cells(1, 10).Value = "Yearly Change"
        Cells(1, 11).Value = "Percentage Change"
        Cells(1, 12).Value = "Total Stock Volume"
        Cells(2, 14).Value = "Greatest % Increase"
        Cells(3, 14).Value = "Greatest % Decrease"
        Cells(4, 14).Value = "Greatest Total Volume"
        Cells(1, 15).Value = "Ticker"
        Cells(1, 16).Value = "Value"
    
        'Get beginning price
        price_begin = Cells(2, 3).Value
        
        'loop through WS
        For i = 2 To lastrow
    
            'Loop identifying when stock symbols change
            If Cells(i + 1, 1) <> Cells(i, 1) Then
              'Defining stock symbols
              stock_symbol = Cells(i, 1).Value
              price_end = Cells(i, 6).Value
        
        
                stock_volume = stock_volume + Cells(i, 7).Value
                                       
                Range("I" & summary_table_row).Value = stock_symbol
               
                price_change = price_end - price_begin
                Range("J" & summary_table_row).Value = price_change
               
                Range("k" & summary_table_row).Value = (price_end - price_begin) / price_begin
               
                Range("L" & summary_table_row).Value = stock_volume
               
                'moving down in stock summary table
                summary_table_row = summary_table_row + 1
               
                'reset stock volume for new ticker
                stock_volume = 0
                
                'reset beginning price
                price_begin = Cells(i + 1, 3)
                
               
              Else
                stock_volume = stock_volume + Cells(i, 7).Value
               
            End If
        Next i
    
    
        'formatting red/green and percentage column
        Columns("K").NumberFormat = "0.00%"
        'format volumen with "," breaks
        Columns("L").Select
        Selection.NumberFormat = "#,##0.00"
    
        'set last row of colored columns
        rgcolumn = WS.Cells(Rows.Count, 9).End(xlUp).Row
        'looping for red/green
        For j = 2 To rgcolumn
            If Cells(j, 10).Value > 0 Then
                Cells(j, 10).Interior.Color = RGB(0, 255, 0)
            ElseIf Cells(j, 10).Value < 0 Then
                Cells(j, 10).Interior.Color = RGB(255, 0, 0)
            Else: Cells(j, 10).Value = 0
                Cells(j, 10).Interior.Color = RGB(255, 0, 255)
            End If
        
        Next j
        
       'loop for biggest/smallest % and volume
        For k = 2 To rgcolumn
            If Cells(k, 11).Value = Application.WorksheetFunction.Max(WS.Range("K2:K" & rgcolumn)) Then
                Cells(2, 15).Value = Cells(k, 9).Value
                Cells(2, 16).Value = Cells(k, 11).Value
                Cells(2, 16).NumberFormat = "0.00%"
            ElseIf Cells(k, 11).Value = Application.WorksheetFunction.Min(WS.Range("K2:K" & rgcolumn)) Then
                Cells(3, 15).Value = Cells(k, 9).Value
                Cells(3, 16).Value = Cells(k, 11).Value
                Cells(3, 16).NumberFormat = "0.00%"
            ElseIf Cells(k, 12).Value = Application.WorksheetFunction.Max(WS.Range("L2:L" & rgcolumn)) Then
                Cells(4, 15).Value = Cells(k, 9).Value
                Cells(4, 16).Value = Cells(k, 12).Value
            End If
        
        Next k
        
    Next WS


End Sub




